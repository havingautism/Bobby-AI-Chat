"use strict";(self.webpackChunkai_chat_app=self.webpackChunkai_chat_app||[]).push([[7695],{81544:(t,e,a)=>{function n(t,e){var a,n,o;t.accDescr&&(null===(a=e.setAccDescription)||void 0===a||a.call(e,t.accDescr));t.accTitle&&(null===(n=e.setAccTitle)||void 0===n||n.call(e,t.accTitle));t.title&&(null===(o=e.setDiagramTitle)||void 0===o||o.call(e,t.title))}a.d(e,{S:()=>n}),(0,a(26566).K2)(n,"populateCommonDb")},87695:(t,e,a)=>{a.d(e,{diagram:()=>v});var n,o=a(42186),r=a(81544),i=a(48200),c=a(76410),l=a(26566),s=a(79276),d=l.UI.packet,p=(n=class{constructor(){this.packet=[],this.setAccTitle=l.SV,this.getAccTitle=l.iN,this.setDiagramTitle=l.ke,this.getDiagramTitle=l.ab,this.getAccDescription=l.m7,this.setAccDescription=l.EI}getConfig(){const t=(0,i.$t)((0,o.A)((0,o.A)({},d),(0,l.zj)().packet));return t.showBits&&(t.paddingY+=10),t}getPacket(){return this.packet}pushWord(t){t.length>0&&this.packet.push(t)}clear(){(0,l.IU)(),this.packet=[]}},(0,l.K2)(n,"PacketDB"),n),h=(0,l.K2)((t,e)=>{(0,r.S)(t,e);let a=-1,n=[],o=1;const{bitsPerRow:i}=e.getConfig();for(let{start:r,end:c,bits:s,label:d}of t.blocks){if(void 0!==r&&void 0!==c&&c<r)throw new Error("Packet block ".concat(r," - ").concat(c," is invalid. End must be greater than start."));if(null!==r&&void 0!==r||(r=a+1),r!==a+1)throw new Error("Packet block ".concat(r," - ").concat(null!==c&&void 0!==c?c:r," is not contiguous. It should start from ").concat(a+1,"."));if(0===s)throw new Error("Packet block ".concat(r," is invalid. Cannot have a zero bit field."));for(null!==c&&void 0!==c||(c=r+(null!==s&&void 0!==s?s:1)-1),null!==s&&void 0!==s||(s=c-r+1),a=c,l.Rm.debug("Packet block ".concat(r," - ").concat(a," with label ").concat(d));n.length<=i+1&&e.getPacket().length<1e4;){const[t,a]=b({start:r,end:c,bits:s,label:d},o,i);if(n.push(t),t.end+1===o*i&&(e.pushWord(n),n=[],o++),!a)break;({start:r,end:c,bits:s,label:d}=a)}}e.pushWord(n)},"populate"),b=(0,l.K2)((t,e,a)=>{if(void 0===t.start)throw new Error("start should have been set during first phase");if(void 0===t.end)throw new Error("end should have been set during first phase");if(t.start>t.end)throw new Error("Block start ".concat(t.start," is greater than block end ").concat(t.end,"."));if(t.end+1<=e*a)return[t,void 0];const n=e*a-1,o=e*a;return[{start:t.start,end:n,label:t.label,bits:n-t.start},{start:o,end:t.end,label:t.label,bits:t.end-o}]},"getNextFittingBlock"),k={parser:{yy:void 0},parse:(0,l.K2)(async t=>{var e;const a=await(0,s.qg)("packet",t),n=null===(e=k.parser)||void 0===e?void 0:e.yy;if(!(n instanceof p))throw new Error("parser.parser?.yy was not a PacketDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");l.Rm.debug(a),h(a,n)},"parse")},u=(0,l.K2)((t,e,a,n)=>{const o=n.db,r=o.getConfig(),{rowHeight:i,paddingY:s,bitWidth:d,bitsPerRow:p}=r,h=o.getPacket(),b=o.getDiagramTitle(),k=i+s,u=k*(h.length+1)-(b?0:i),f=d*p+2,w=(0,c.D)(e);w.attr("viewbox","0 0 ".concat(f," ").concat(u)),(0,l.a$)(w,u,f,r.useMaxWidth);for(const[c,l]of h.entries())g(w,l,c,r);w.append("text").text(b).attr("x",f/2).attr("y",u-k/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")},"draw"),g=(0,l.K2)((t,e,a,n)=>{let{rowHeight:o,paddingX:r,paddingY:i,bitWidth:c,bitsPerRow:l,showBits:s}=n;const d=t.append("g"),p=a*(o+i)+i;for(const h of e){const t=h.start%l*c+1,e=(h.end-h.start+1)*c-r;if(d.append("rect").attr("x",t).attr("y",p).attr("width",e).attr("height",o).attr("class","packetBlock"),d.append("text").attr("x",t+e/2).attr("y",p+o/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(h.label),!s)continue;const a=h.end===h.start,n=p-2;d.append("text").attr("x",t+(a?e/2:0)).attr("y",n).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",a?"middle":"start").text(h.start),a||d.append("text").attr("x",t+e).attr("y",n).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(h.end)}},"drawWord"),f={draw:u},w={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},m=(0,l.K2)(function(){let{packet:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const e=(0,i.$t)(w,t);return"\n\t.packetByte {\n\t\tfont-size: ".concat(e.byteFontSize,";\n\t}\n\t.packetByte.start {\n\t\tfill: ").concat(e.startByteColor,";\n\t}\n\t.packetByte.end {\n\t\tfill: ").concat(e.endByteColor,";\n\t}\n\t.packetLabel {\n\t\tfill: ").concat(e.labelColor,";\n\t\tfont-size: ").concat(e.labelFontSize,";\n\t}\n\t.packetTitle {\n\t\tfill: ").concat(e.titleColor,";\n\t\tfont-size: ").concat(e.titleFontSize,";\n\t}\n\t.packetBlock {\n\t\tstroke: ").concat(e.blockStrokeColor,";\n\t\tstroke-width: ").concat(e.blockStrokeWidth,";\n\t\tfill: ").concat(e.blockFillColor,";\n\t}\n\t")},"styles"),v={parser:k,get db(){return new p},renderer:f,styles:m}}}]);
//# sourceMappingURL=7695.fb798276.chunk.js.map