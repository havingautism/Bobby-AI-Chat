# 工作流名称
name: Deploy to GitHub Pages

# 触发条件
on:
  push:
    branches: [main]

# 工作任务
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      # ====================================================================
      # ✨ 终极魔法：精准伪造所有 Tauri API 子模块 ✨
      # ====================================================================
      - name: Mock Tauri API for Web Build (Advanced)
        run: |
          # 定义一个包含所有需要伪造的 tauri 子模块的列表
          # 你的报错提到了 'core'，通常 'tauri' 和 'event' 也很常用
          MODULES_TO_MOCK="core tauri event window path shell"

          # 循环遍历列表，为每个子模块创建伪造文件
          for module in $MODULES_TO_MOCK; do
            # 1. 创建子模块的目录，例如: node_modules/@tauri-apps/api/core
            mkdir -p "node_modules/@tauri-apps/api/$module"
            
            # 2. 在子模块目录中创建一个假的 package.json
            echo "{ \"name\": \"@tauri-apps/api/$module\", \"version\": \"0.0.0-mock\", \"main\": \"index.js\" }" > "node_modules/@tauri-apps/api/$module/package.json"
            
            # 3. 在子模块目录中创建一个假的 index.js，导出一个默认的空对象
            # 这足以满足 `import * as ...` 或 `import { ... }` 的需求
            echo 'export default {};' > "node_modules/@tauri-apps/api/$module/index.js"
            
            echo "✅ Mocked @tauri-apps/api/$module"
          done
          
          echo "✅ Successfully mocked all required Tauri API submodules."

      - name: Build
        run: npm run build:mobile
        env:
          GENERATE_SOURCEMAP: false
          INLINE_RUNTIME_CHUNK: false
          IMAGE_INLINE_SIZE_LIMIT: 1000
          REACT_APP_OPTIMIZE_IMAGES: true
          REACT_APP_ENABLE_CODE_SPLITTING: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
