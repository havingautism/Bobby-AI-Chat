# 工作流名称
name: Deploy to GitHub Pages

# 触发条件
on:
  push:
    branches: [main]

# 工作任务
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      # ====================================================================
      # ✨ 魔法步骤：在这里模拟 Tauri API ✨
      # ====================================================================
      - name: Mock Tauri API for Web Build
        # 这个步骤只在 CI 环境中运行，不会影响你的本地开发
        run: |
          # 创建一个假的 @tauri-apps/api 目录结构
          mkdir -p node_modules/@tauri-apps/api
          # 在里面创建一个 package.json 文件，让它看起来像个真正的包
          echo '{ "name": "@tauri-apps/api", "version": "0.0.0-mock", "main": "index.js" }' > node_modules/@tauri-apps/api/package.json
          # 创建一个假的 index.js，并导出一个空的 invoke 函数和其他可能用到的模块
          # 这会满足所有 `import { ... } from '@tauri-apps/api/...'` 的需求
          echo 'export const invoke = () => Promise.resolve(); export const tauri = {}; export const event = {}; export const window = {}; export const path = {}; export default {};' > node_modules/@tauri-apps/api/index.js
          echo "✅ Successfully mocked Tauri API for web build."
      
      - name: Build
        run: npm run build:mobile
        env:
          GENERATE_SOURCEMAP: false
          INLINE_RUNTIME_CHUNK: false
          IMAGE_INLINE_SIZE_LIMIT: 1000
          REACT_APP_OPTIMIZE_IMAGES: true
          REACT_APP_ENABLE_CODE_SPLITTING: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
